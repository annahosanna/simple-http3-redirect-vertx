apply plugin: 'java'

repositories {
  mavenCentral()

}

sourceSets {
  main
}


dependencies {
implementation "io.netty:netty-common:4.1.118.Final"
implementation "io.netty:netty-buffer:4.1.118.Final"
implementation "io.netty:netty-codec:4.1.118.Final"
implementation "io.netty:netty-codec-http:4.1.118.Final"
implementation "io.netty:netty-codec-http2:4.1.118.Final"
implementation "io.netty:netty-transport:4.1.118.Final"
implementation "io.netty:netty-resolver-dns:4.1.118.Final"
implementation "io.netty:netty-codec-socks:4.1.118.Final"
implementation "io.netty:netty-handler-proxy:4.1.118.Final"
implementation "io.netty:netty-resolver-dns-native-macos:4.1.118.Final"
  implementation "io.vertx:vertx-config:5.0.0.CR5"
  implementation "io.vertx:vertx-core:5.0.0.CR5"
  implementation "io.vertx:vertx-web:5.0.0.CR5"
  implementation "io.vertx:vertx-web-common:5.0.0.CR5"
  implementation "io.vertx:vertx-web-client:5.0.0.CR5"
  implementation "io.vertx:vertx-web-api-service:5.0.0.CR5"
  implementation "io.vertx:vertx-launcher-application:5.0.0.CR5"
}

configurations {
  compile
}

// compileJava.doFirst {
//	sourceSets.main.java.srcDirs = [ 'src/main/java' ]
// }

jar {
    manifest {
        // 'Implementation-Version': version,
        attributes (
          'Main-Class' : 'example.StartServers'
        )
    }
    archiveFileName = "vertx-server.jar"
    duplicatesStrategy = "exclude"
    // configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    // exclude("META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA")
    from(configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }) {
      exclude("META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA")
    }
}
